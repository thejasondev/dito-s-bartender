---
import { Icon } from 'astro-icon/components';

const navItems = [
  { name: 'Home', url: '/' },
  { name: 'Services', url: '/services' },
  { name: 'About', url: '/about' },
  { name: 'Gallery', url: '/gallery' },
  { name: 'FAQ', url: '/faq' },
  { name: 'Contact', url: '/contact' },
];

const socialLinks = [
  { name: 'Instagram', icon: 'mdi:instagram', url: 'https://instagram.com/dito_mobilebar?' },
  { name: 'Facebook', icon: 'mdi:facebook', url: 'https://facebook.com/share/12KUW1sGc7W/?' },
];

const currentPath = Astro.url.pathname;
---

<header class="fixed w-full bg-white/90 backdrop-blur-sm z-50 shadow-sm">
  <div class="container mx-auto px-4 py-3">
    <div class="flex justify-between items-center">
      <a href="/" class="flex items-center gap-2">
        <span class="text-2xl font-bold text-primary">Dito's</span>
        <span class="text-xl font-semibold text-secondary">Bartender</span>
      </a>
      
      <!-- Mobile menu button -->
      <button 
        id="menu-toggle" 
        class="lg:hidden relative z-30 text-gray-700 focus:outline-none"
        aria-expanded="false"
        aria-label="Toggle navigation menu"
        aria-controls="mobile-menu"
      >
        <div class="relative w-8 h-8 flex items-center justify-center">
          <span id="hamburger-top" class="absolute h-0.5 w-6 bg-gray-700 transform transition duration-300 ease-in-out"></span>
          <span id="hamburger-middle" class="absolute h-0.5 w-6 bg-gray-700 transform transition duration-300 ease-in-out"></span>
          <span id="hamburger-bottom" class="absolute h-0.5 w-6 bg-gray-700 transform transition duration-300 ease-in-out"></span>
        </div>
      </button>
      
      <!-- Desktop navigation -->
      <nav class="hidden lg:flex items-center space-x-6">
        {navItems.map(item => (
          <a 
            href={item.url} 
            class:list={[
              'transition duration-300 hover:text-primary relative py-2',
              { 
                'text-primary font-medium': currentPath === item.url
              }
            ]}
          >
            {item.name}
            {currentPath === item.url && (
              <span class="absolute bottom-0 left-0 w-full h-0.5 bg-primary"></span>
            )}
          </a>
        ))}
        
        <a href="tel:+1(727)945-4200" class="font-medium text-white bg-primary px-4 py-2 rounded-md hover:bg-primary-dark transition duration-300 flex items-center gap-1">
          <Icon name="mdi:phone" class="w-4 h-4" />
          <span>Llamar ahora</span>
        </a>
      </nav>
    </div>
  </div>
  
  <!-- Mobile navigation overlay -->
  <div 
    id="mobile-menu-overlay" 
    class="lg:hidden fixed inset-0 bg-black/0 backdrop-blur-0 opacity-0 -z-10 transition-all duration-500 ease-in-out"
    aria-hidden="true"
  ></div>
  
  <!-- Mobile navigation -->
  <nav 
    id="mobile-menu" 
    class="lg:hidden fixed top-0 right-0 h-screen w-3/4 max-w-xs bg-white shadow-2xl transform translate-x-full transition-transform duration-500 ease-in-out z-20 flex flex-col"
    aria-hidden="true"
  >
    <div class="p-6 mt-12">
      <div class="flex flex-col space-y-6">
        {navItems.map((item, index) => (
          <a 
            href={item.url} 
            class:list={[
              'mobile-nav-item transform translate-x-8 opacity-0 transition-all duration-300 delay-100 py-2 border-b border-gray-100',
              { 
                'text-primary font-medium': currentPath === item.url
              }
            ]}
            style={`transition-delay: ${100 + index * 50}ms`}
          >
            {item.name}
          </a>
        ))}
        
        <div class="mobile-nav-item transform translate-x-8 opacity-0 transition-all duration-300 delay-400 pt-2">
          <p class="text-xs text-gray-500 mb-2">Síguenos</p>
          <div class="flex gap-4">
            {socialLinks.map(link => (
              <a 
                href={link.url}
                aria-label={link.name}
                class="w-8 h-8 rounded-full bg-gray-100 flex items-center justify-center text-gray-700 hover:bg-primary hover:text-white transition duration-300"
              >
                <Icon name={link.icon} class="w-4 h-4" />
              </a>
            ))}
          </div>
        </div>
      </div>
    </div>
    
    <div class="mt-auto p-6">
      <div class="mobile-nav-item transform translate-x-8 opacity-0 transition-all duration-300 delay-500">
        <p class="text-sm text-gray-500">¿Necesitas ayuda?</p>
        <div class="flex gap-3 mt-2">
          <a href="tel:+1(727)945-4200" class="flex items-center gap-1 text-primary hover:underline">
            <Icon name="mdi:phone" class="w-4 h-4" />
            <span>Llamar</span>
          </a>
          <span class="text-gray-300">|</span>
          <a href={`https://wa.me/+17279454200?text=${encodeURIComponent("Hi! I'm interested in hiring your bartending services for my event. I’d like to get more information.")}`} class="flex items-center gap-1 text-primary hover:underline">
            <Icon name="mdi:whatsapp" class="w-4 h-4" />
            <span>Mensaje</span>
          </a>
        </div>
      </div>
      <div class="mobile-nav-item transform translate-x-8 opacity-0 transition-all duration-300 delay-600 mt-4">
        <div class="flex items-center justify-between border-t border-gray-100 pt-4">
          <div class="flex items-center gap-2">
            <Icon name="mdi:clock-outline" class="w-5 h-5 text-primary" />
            <div>
              <p class="text-xs text-gray-500">Horario de atención</p>
              <p class="text-sm font-medium">Lun-Sáb: 9am-9pm</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </nav>
</header>

<script>
  document.addEventListener('astro:page-load', () => {
    const menuToggle = document.getElementById('menu-toggle');
    const mobileMenu = document.getElementById('mobile-menu');
    const mobileOverlay = document.getElementById('mobile-menu-overlay');
    const hamburgerTop = document.getElementById('hamburger-top');
    const hamburgerMiddle = document.getElementById('hamburger-middle');
    const hamburgerBottom = document.getElementById('hamburger-bottom');
    const mobileNavItems = document.querySelectorAll('.mobile-nav-item');
    
    // Inicializar hamburger
    if (hamburgerTop && hamburgerMiddle && hamburgerBottom) {
      hamburgerTop.setAttribute('style', 'transform: translateY(-6px)');
      hamburgerBottom.setAttribute('style', 'transform: translateY(6px)');
    }
    
    if (menuToggle && mobileMenu && mobileOverlay && hamburgerTop && hamburgerMiddle && hamburgerBottom) {
      // Funcionalidad del menú móvil
      menuToggle.addEventListener('click', () => {
        const isExpanded = menuToggle.getAttribute('aria-expanded') === 'true';
        
        // Actualizar el estado del botón
        menuToggle.setAttribute('aria-expanded', !isExpanded ? 'true' : 'false');
        mobileMenu.setAttribute('aria-hidden', isExpanded ? 'true' : 'false');
        
        // Animar el menú y overlay
        if (isExpanded) {
          // Cerrar el menú
          mobileMenu.setAttribute('style', 'transform: translateX(100%)');
          mobileOverlay.setAttribute('style', 'opacity: 0; backdrop-filter: blur(0px); background-color: rgba(0, 0, 0, 0); z-index: -10');
          document.body.classList.remove('overflow-hidden');
          
          // Animar los items de vuelta
          mobileNavItems.forEach(item => {
            item.setAttribute('style', 'transform: translateX(2rem); opacity: 0');
          });
          
          // Animar hamburger a estado inicial
          hamburgerTop.setAttribute('style', 'transform: translateY(-6px) rotate(0deg)');
          hamburgerMiddle.setAttribute('style', 'opacity: 1');
          hamburgerBottom.setAttribute('style', 'transform: translateY(6px) rotate(0deg)');
        } else {
          // Abrir el menú
          mobileMenu.setAttribute('style', 'transform: translateX(0)');
          mobileOverlay.setAttribute('style', 'opacity: 1; backdrop-filter: blur(4px); background-color: rgba(0, 0, 0, 0.5); z-index: 10');
          document.body.classList.add('overflow-hidden');
          
          // Animar los items uno por uno
          setTimeout(() => {
            mobileNavItems.forEach(item => {
              item.setAttribute('style', 'transform: translateX(0); opacity: 1');
            });
          }, 200);
          
          // Animar hamburger a X
          hamburgerTop.setAttribute('style', 'transform: translateY(0) rotate(45deg)');
          hamburgerMiddle.setAttribute('style', 'opacity: 0');
          hamburgerBottom.setAttribute('style', 'transform: translateY(0) rotate(-45deg)');
        }
      });
      
      // Cerrar el menú al hacer clic en el overlay
      mobileOverlay.addEventListener('click', () => {
        menuToggle.click();
      });
      
      // Cerrar el menú cuando se hace clic en un enlace
      const mobileLinks = mobileMenu.querySelectorAll('a');
      mobileLinks.forEach(link => {
        link.addEventListener('click', () => {
          menuToggle.click();
        });
      });
      
      // Cerrar el menú cuando se redimensiona a desktop
      window.addEventListener('resize', () => {
        if (window.innerWidth >= 1024 && menuToggle.getAttribute('aria-expanded') === 'true') {
          menuToggle.click();
        }
      });
    }
  });
</script>

