---
interface Props {
  src: string;
  alt: string;
  width?: number;
  height?: number;
  class?: string;
  loading?: 'lazy' | 'eager';
  decoding?: 'async' | 'auto' | 'sync';
  fetchpriority?: 'high' | 'low' | 'auto';
  quality?: number;
  sizes?: string;
  srcset?: string;
  placeholder?: string;
}

const { 
  src, 
  alt, 
  width, 
  height, 
  class: className = '',
  loading = 'lazy',
  decoding = 'async',
  fetchpriority,
  sizes,
  srcset,
  placeholder
} = Astro.props;

// Si hay un placeholder, preparamos para la carga progresiva
const hasPlaceholder = !!placeholder;
---

{hasPlaceholder ? (
  <div class="progressive-img-container">
    <img 
      src={placeholder} 
      alt={alt} 
      width={width} 
      height={height} 
      class={`placeholder ${className}`}
      aria-hidden="true"
      loading="eager"
      decoding="async"
    />
    <img 
      src={src} 
      alt={alt} 
      width={width} 
      height={height} 
      class={`main-image ${className}`}
      loading={loading}
      decoding={decoding}
      fetchpriority={fetchpriority}
      sizes={sizes}
      srcset={srcset}
      onload="this.classList.add('loaded'); this.previousElementSibling.classList.add('hidden')"
    />
  </div>
) : (
  <img 
    src={src} 
    alt={alt} 
    width={width} 
    height={height} 
    class={className}
    loading={loading}
    decoding={decoding}
    fetchpriority={fetchpriority}
    sizes={sizes}
    srcset={srcset}
  />
)}

<style>
  img {
    max-width: 100%;
    height: auto;
    display: block;
  }
  
  .progressive-img-container {
    position: relative;
    overflow: hidden;
    width: 100%;
    height: 100%;
  }
  
  .placeholder {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    filter: blur(10px);
    transform: scale(1.05);
    transition: opacity 0.5s ease-in-out;
    object-fit: cover;
  }
  
  .main-image {
    width: 100%;
    height: 100%;
    opacity: 0;
    transition: opacity 0.5s ease-in-out;
    object-fit: cover;
  }
  
  .main-image.loaded {
    opacity: 1;
  }
  
  .placeholder.hidden {
    opacity: 0;
  }
</style>

<script>
  // Para navegadores que no ejecutan JavaScript, aseguramos que la imagen principal sea visible
  document.addEventListener('astro:page-load', () => {
    const mainImages = document.querySelectorAll('.main-image:not(.loaded)');
    mainImages.forEach(img => {
      img.classList.add('loaded');
      const placeholder = img.previousElementSibling;
      if (placeholder?.classList.contains('placeholder')) {
        placeholder.classList.add('hidden');
      }
    });
  });
</script> 